'\" t
...\" ** $Id: XltNumEntry.3.in,v 1.1 2001/06/22 21:38:52 amai Exp $
...\" **
.TH XltNumEntry 3X "" "" "" ""
.ds )H Rick Scott
.ds ]W Xlt Version 13.0.13
.SH NAME
\fIXltNumEntry\fP \- The NumEntry widget class
.SH SYNOPSIS
.nf
.sS
.iS
\&#include <Xlt/NumEntry.h>
.iE
.sE
.SH DESCRIPTION
.fi
NumEntry is used to enter numerical data.  It consists of a label,
a TextField and, two arrow buttons. The text entered is run through
a calculator and the result of the calculation is displayed. The arrow
buttons are used to increment/decrement the digit to the right of the
insertion cursor.  The arrows have an auto-repeat feature.
.PP 
The user can specify resources in a resource file for the automatically
created widgets. The following is a list of the names of these widgets.
.PP 
Label \- "Label"
.PP 
TextField \- "Text"
.PP 
RowColumn \- "RowCol"
.PP 
ArrowButton \- "UpArrow"
.PP 
ArrowButton \- "DnArrow"
.SS "Classes"
NumEntry inherits behavior and resources from the
\fICore\fP, \fIComposite\fP, \fIConstraint\fP, \fIXmManager\fP, and
\fIXmForm\fP classes.
.PP 
The class pointer is \fIXltNumEntryWidgetClass\fP.
.PP 
The class name is \fIXltNumEntry\fP.
.SS "New Resources"
The following table defines a set of widget resources used by the programmer
to specify data.  The programmer can also set the resource values for the
inherited classes to set attributes for this widget.  To reference a
resource by name or by class in a .Xdefaults file, remove the \fIXmN\fP or
\fIXmC\fP prefix and use the remaining letters.  To specify one of the defined
values for a resource in a .Xdefaults file, remove the \fIXm\fP prefix and use
the remaining letters (in either lowercase or uppercase, but include any
underscores between words).
The codes in the access column indicate if the given resource can be
set at creation time (C),
set by using \fIXtSetValues\fP (S),
retrieved by using \fIXtGetValues\fP (G), or is not applicable (N/A).
.P 
.sp 1
.in 0
.KS
.TS 
center;
cBp7 ssss
lBp6 lBp6 lBp6 lBp6 lBp6
lp6 lp6 lp6 lp6 lp6.
 XltNumEntry Resource Set
Name	Class	Type	Default	Access
_
XmNlabelString	XtCLabelString	XmString	dynamic	CSG
XmNvalue	XmCValue	String	""	CSG
XmNcolumns	XmCColumns	short	20	CSG
XmNvalueChangedCallback	XtCCallback	XtCallbackList	NULL	C
XmNactivateCallback	XtCCallback	XtCallbackList	NULL	C
XmNlosingFocusCallback	XtCCallback	XtCallbackList	NULL	C
XmNhelpCallback	XtCCallback	XtCallbackList	NULL	C
XltNinitialDelay	XltCInitialDelay	int	1000	CSG
XltNdelay	XltCDelay	int	100	CSG
.TE
.KE
.in
.sp 1
.IP "\fIXmNlabelString\fP"
The label displayed to the left of the text field.  If not specified it
will be the name of the widget.
.IP "\fIXmNvalue\fP"
This is the same as the value of the TextField widget.
.IP "\fIXmNcolumns\fP"
This is the same as the value of the TextField widget.
.IP "\fIXmNvalueChangedCallback\fP"
Specifies the list of callbacks that is called when
the value changes.
The reason sent by the callback is \fIXmCR_VALUE_CHANGED\fP.
.IP "\fIXmNactivateCallback\fP"
This is the same as the TextField activateCallback.
.IP "\fIXmNlosingFocusCallback\fP"
This is the same as the TextField losingFocusCallback.
.IP "\fIXmNhelpCallback\fP"
A help callback is automatically attached that displays a summary of the
calculator functions.
.IP "\fIXltNinitialDelay\fP"
Time to wait, in ms, until the auto repeat kicks in.
.IP "\fIXltNdelay\fP"
The time, in ms, between automatic repeats.

.SS "Inherited Resources"
NumEntry inherits behavior and resources from the following
superclasses.  For a complete description of each resource, refer to the
man page for that superclass.
.P 
.sp 1
.in 0
.KS
.TS 
center;
cBp7 ssss
lBp6 lBp6 lBp6 lBp6 lBp6
lp6 lp6 lp6 lp6 lp6.
 Core Resource Set
Name	Class	Type	Default	Access
_
XmNdestroyCallback	XmCCallback	XtCallbackList	NULL	C
XmNscreen	XmCScreen	Screen *	dynamic	CG
.wH
.tH
.TE
.KE
.in
.sp 1
.wH
.in  
.SS "Callback Information"
A pointer to the following structure is passed to the valueChanged callback:
.sS
.iS
.ta .25i 1.1i
.nf
typedef struct
{
	int	\fBreason\fI;
	XEvent	\fB*event\fI;
	Boolean	\fBdoit\fI;
	char	\fB*value\fI;
	double	\fBdvalue\fI;
} XltNumEntryVerifyCallbackStruct;
.iE
.sE
.wH
.fi
.IP "\fBreason\fP"
Indicates why the callback was invoked
.IP "\fBevent\fP"
This is always NULL.
.IP "\fBdoit\fP"
This is a flag that indicates whether or not the value will replace the
contents of the TextField.  If false, the old text will be left in the
TextField.
.IP "\fBvalue\fP"
This is the text that will be placed in the TextField widget. If you
do not like the way it is formated feel free to XtFree(value) and replace
it with anything you like.
.IP "\fBdvalue\fP"
This is the result of the the calculation performed on the entered text. You
can use this value to format the value string how you want.
.SS ""
All other callbacks are the same as their TextField equivalents.

.SS "Translations"
The following translations are defined for XltNumEntry:
.PP
.iS
.ta 1.5i
.nf
<Key>osfDown: Down()
<Key>osfUp:   Up()
!<Btn4Down>: Up()
!<Btn5Down>: Down()
.wH
.fi
.iE
.PP
.SS "Action Routines"
The XltNumEntry action routines are described below:
.IP "\fIUp()\fP:"
Increment the digit to the right of the cursor.
.IP "\fIDown()\fP:"
Decrement the digit to the right of the cursor.
.IP "\fIHelp()\fP:"
Display the calculator help dialog.
.SS "Behavior"
XltNumEntry behavior is described below:
.IP
Text is entered and run through a calculator with the result displayed back
in the TextField.  The arrow buttons can be used to increment/decrement the
digit to the right of the insertion cursor. The buttons have an auto-repeat
feature invoked by holding the button down.  The calculator is called whenever
the text field is losing focus, activate is pressed or, a button is used to
modify a digit.  If the result of the calculation is different than last time
the value changed callbacks are called.

Pressing F1 while the widget has focus will pop up a dialog with a summary
of the calculator features.

.SS "Virtual Bindings"
The bindings for virtual keys are vendor specific.
For information about bindings for virtual buttons and keys, see \fIVirtualBindings(3X)\fP.
.SH RELATED INFORMATION
.na
\fIXltCreateNumEntry(3X)\fP,
\fIXltVaCreateNumEntry(3X)\fP,
\fIcalc(1)\fP (if you are lucky enough to have it),
.ad

AskQuestion	./askquestion.c	/^AskQuestion ( Widget parent, char *str )$/
AskQuestionCallback	./askquestion.c	/^void AskQuestionCallback ( Widget    w, $/
AttachPopup	./MenuSupport.c	/^static void AttachPopup ( Widget parent, Widget me/
ChangeSpeed	./callback.c	/^ChangeSpeed(Widget w, XEvent *event, String *args,/
CreateMenu	./MenuSupport.c	/^Widget CreateMenu ( MenuType         menuType,$/
CreateMenuChildren	./MenuSupport.c	/^static void CreateMenuChildren ( Widget           /
CreateWindows	./xstuff.c	/^CreateWindows(argc,argv)$/
ForceRedisplay	./xstuff.c	/^ForceRedisplay(void)$/
GetPixelByName	./getpixelbyname.c	/^Boolean GetPixelByName (const Widget w, const char/
GetProc	./SunOS/os.c	/^GetProc(void)$/
GetProcInfo	./libgtop/os.c	/^GetProcInfo(void)$/
GetProcName	./libgtop/os.c	/^GetProcName(ProcInfo *proc, TREENODE *node)$/
GetStatus	./libgtop/os.c	/^GetStatus(ProcInfo *proc)$/
GetTopShell	./dialog.c	/^GetTopShell(Widget w) $/
GetUID_Color	./common.c	/^GetUID_Color (uid_t uid) $/
Handle_Process	./process.c	/^Handle_Process(Widget w, pid_t pid, XEvent *event,/
IDtouser	./common.c	/^IDtouser(uid_t uid) {$/
MAX	./common.h	/^#define MAX(a,b) ((a>b)?a:b)$/
MIN	./common.h	/^#define MIN(a,b) ((a<b)?a:b)$/
Maskquestion	./askquestion.c	/^void main ( int argc, char **argv )$/
Mloadavg	./libgtop/loadavg.c	/^main() $/
Mos	./libgtop/os.c	/^main() $/
Mxstuff	./xstuff.c	/^main(int argc, char *argv[])$/
NewDialog	./dialog.c	/^NewDialog(Widget w, char *dialog_name, const char*/
Popup	./callback.c	/^Popup(Widget w, XtPointer client_data, XtPointer c/
PostMenuHandler	./MenuSupport.c	/^static void PostMenuHandler ( Widget w, XtPointer /
Quit	./callback.c	/^Quit(Widget w, XEvent *event, String *args, Cardin/
QuitCallback	./callback.c	/^QuitCallback(Widget w, XtPointer clientData, XtPoi/
QuitCommon	./callback.c	/^QuitCommon(Widget w)$/
Redisplay	./callback.c	/^Redisplay(Widget w, XEvent *event, String *parms, /
RedisplayCallback	./callback.c	/^RedisplayCallback(Widget w, XtPointer client_data,/
Redraw	./callback.c	/^Redraw(Widget w, XtPointer client_data, XtPointer /
Resize	./callback.c	/^Resize(Widget w, void *client, void *call)$/
ShowDialog	./askquestion.c	/^ShowDialog ( Widget parent, const int dialog_type,/
ShowProcess	./xstuff.c	/^ShowProcess(w, event, parms, count)$/
ShowScrolledDialog	./askquestion.c	/^ShowScrolledDialog ( Widget parent, const int dial/
SignalListCallback	./process.c	/^SignalListCallback ( Widget w, XtPointer client_da/
Timeout	./callback.c	/^Timeout(XtPointer closure, XtIntervalId* id)$/
ToggleBeep	./callback.c	/^ToggleBeep(Widget w, XEvent *event, String *args, /
ToggleBeepCallback	./callback.c	/^ToggleBeepCallback(Widget w, XtPointer client_data/
ToggleBoth	./callback.c	/^ToggleBoth(Widget w, XtPointer client_data, XtPoin/
ToggleCommon	./callback.c	/^ToggleCommon(int action, Boolean *toggle, Widget w/
ToggleKernel	./callback.c	/^ToggleKernel(Widget w, XEvent *event, String *args/
ToggleKill	./callback.c	/^ToggleKill(Widget w, XEvent *event, String *args, /
ToggleKillCallback	./callback.c	/^ToggleKillCallback(Widget w, XtPointer client_data/
ToggleProcs	./callback.c	/^ToggleProcs(Widget w, XEvent *event, String *args,/
ToggleProcsCallback	./callback.c	/^ToggleProcsCallback(Widget w, XtPointer client_dat/
ToggleProcsCommon	./callback.c	/^ToggleProcsCommon(int action)$/
XtWidgetToName	./xstuff.c	/^XtWidgetToName(Widget w)$/
YesCallback	./askquestion.c	/^static void YesCallback ( Widget    w,$/
Zoom	./callback.c	/^Zoom(Widget w, XEvent *event, String *args, Cardin/
ZoomCallback	./callback.c	/^ZoomCallback(Widget w, XtPointer client_data, XtPo/
ZoomCommon	./callback.c	/^ZoomCommon(void)$/
append_config	./common.c	/^#define append_config(x) sprintf x; strcat(config_/
arrange	./common.c	/^arrange(void)$/
common_init	./common.c	/^common_init(int argc, char *argv[]) {$/
create_process_menu	./process.c	/^create_process_menu(Widget parent, char *name)$/
destroy_widget_callback	./dialog.c	/^destroy_widget_callback(Widget w, XtPointer client/
display	./common.c	/^display(Boolean forceRedisplay, Display *display, /
do_kill	./process.c	/^do_kill(Widget w, pid_t pid, signal_t signal_value/
do_process_action_callback	./process.c	/^do_process_action_callback(Widget w, XtPointer cli/
do_process_cancel_callback	./process.c	/^do_process_cancel_callback(Widget w, XtPointer cli/
draw	./common.c	/^draw(Display *display, Window window)$/
error_dialog	./libgtop/os.c	/^#define error_dialog(msg, rc) g_error(msg); exit(r/
eventhandler	./callback.c	/^eventhandler(Widget w, XtPointer client_data, $/
find_pid_under_mouse	./common.c	/^find_pid_under_mouse(Display *dpy, Window window, /
find_uid_color_index	./common.c	/^find_uid_color_index(uid_t uid) $/
getkval	./AIX/loadavg.c	/^getkval(offset, ptr, size, refstr)$/
getnum	./xpsplay.c	/^getnum(char *ptr, char *newptr[])$/
gnopstree_getloadavg	./libgtop/loadavg.c	/^gnopstree_getloadavg (double *one, double *five, d/
hash_uid	./common.c	/^hash_uid (uid_t uid)$/
help_callback	./callback.c	/^help_callback(Widget w, XtPointer client_data, XtP/
insert_uid	./common.c	/^insert_uid(uid_t uid) $/
is_valid_interval	./callback.c	/^is_valid_interval(Widget w, long int value) $/
loadavg_init	./AIX/loadavg.c	/^loadavg_init() {$/
loaddouble	./SunOS/loadavg.c	/^#define loaddouble(la) ((double)(la) \/ FSCALE)$/
machine_specific_init	./libgtop/os.c	/^machine_specific_init(void)$/
map_eventhandler	./callback.c	/^map_eventhandler(Widget w, XtPointer client_data, /
min	./AIX/os.c	/^#define min(a,b) ((a<b)?a:b)$/
new_color_hash	./common.c	/^new_color_hash(uid_t uid) $/
parse_toggle_arg	./callback.c	/^parse_toggle_arg(const Widget w, const char *fn_na/
popdown_refresh_rate_dialog	./callback.c	/^popdown_refresh_rate_dialog(Widget dialog, XtPoint/
popdown_usercolor_callback	./xstuff.c	/^popdown_usercolor_callback(Widget w, XtPointer cli/
popup_debug_dialog	./xstuff.c	/^popup_debug_dialog( Widget button, XtPointer clien/
popup_default_kill_dialog	./process.c	/^popup_default_kill_dialog( Widget button, XtPointe/
popup_pscmd_dialog	./xstuff.c	/^popup_pscmd_dialog( Widget button, XtPointer clien/
popup_refresh_rate_dialog	./xstuff.c	/^popup_refresh_rate_dialog(Widget button, XtPointer/
popup_set_user_color	./xstuff.c	/^popup_set_user_color( Widget button, XtPointer cli/
popup_set_user_dialog	./xstuff.c	/^popup_set_user_dialog( Widget button, XtPointer cl/
printTree	./common.c	/^void printTree(Boolean show_parent)$/
proc_owner	./Linux/os.c	/^proc_owner(const pid_t pid)$/
read_one_proc_stat	./libgtop/os.c	/^read_one_proc_stat(unsigned pid, ProcInfo *proc)$/
set_debug_callback	./xstuff.c	/^set_debug_callback(Widget w, XtPointer client_data/
set_kill_signal_callback	./process.c	/^set_kill_signal_callback( Widget button, XtPointer/
set_label	./xstuff.c	/^set_label (char *name, Widget w)$/
set_priority_callback	./process.c	/^set_priority_callback(Widget scale_w, XtPointer cl/
set_pscmd_callback	./xstuff.c	/^set_pscmd_callback(Widget w, XtPointer client_data/
set_refresh_rate	./xstuff.c	/^set_refresh_rate(Widget w, XtPointer client_data, /
set_user_callback	./xstuff.c	/^set_user_callback(Widget w, XtPointer client_data,/
show_version	./common.c	/^show_version(void)$/
sort	./common.c	/^sort(void)$/
swap	./common.c	/^swap(TREENODE *a, TREENODE *b)$/
toIndex	./common.c	/^#define toIndex(a) (a-Node)$/
toggle_button_callback	./process.c	/^toggle_button_callback(Widget w, XtPointer client_/
toggle_pattern	./xstuff.c	/^toggle_pattern(Widget w, XtPointer client_data, Xt/
traverse	./common.c	/^traverse(nodeIndex cur)$/
untraversed	./common.c	/^#define untraversed(i) (Level[i] < 0)$/
updateMessage	./common.c	/^updateMessage(void)$/
usage	./common.c	/^usage(int exitcode)$/
usertoID	./common.c	/^usertoID(const char *name, \/*out*\/ uid_t *uid ) {$/
visibility_eventhandler	./callback.c	/^visibility_eventhandler(Widget w, XtPointer client/
xps_getloadavg	./AIX/loadavg.c	/^xps_getloadavg (double *one, double *five, double /
xpsplay	./xpsplay.c	/^xpsplay(Display *dpy, char *tuneptr)$/
